name: 'attest-sign'
description: 'Generate SBOM, attest and sign docker image'
branding:
  icon: 'lock'
  color: 'green'
inputs:
  image_ref:
    description: |
      'form <image>@<digest>'
      'image ref, i.e. "europe-north1-docker.pkg.dev/nais-io/nais/images/canary-deployer@sha256:eac1f85bee008dfe4ca0eadd1f32256946a171b445d129dba8f00cc67d43582b"'
    required: true
  sbom:
    description: 'existing SBOM in cyclonedx format'
    default: 'auto-generate-for-me-please.json'
outputs:
  sbom:
    description: 'SBOM in cyclonedx format'
    value: ${{ steps.set-outputs.outputs.SBOM }}
runs:
  using: 'composite'
  steps:
    - name: 'Validate image ref'
      run: |
        if [[ ${{ inputs.image_ref }} != *@sha256:* ]]; then
          echo "Image must be in the form of <image>@<digest>"
          exit 1
        fi
      shell: 'bash'
    - name: 'Install cosign'
      uses: 'sigstore/cosign-installer@dd6b2e2b610a11fd73dd187a43d57cc1394e35f9' # ratchet:sigstore/cosign-installer@v3.0.5
      with:
        cosign-release: 'v2.0.2'
    - name: 'Generate SBOM'
      if: inputs.sbom == 'auto-generate-for-me-please.json'
      uses: 'aquasecurity/trivy-action@e5f43133f6e8736992c9f3c1b3296e24b37e17f2' # ratchet:aquasecurity/trivy-action@0.10.0
      with:
        scan-type: 'image'
        format: 'cyclonedx'
        output: 'auto-generate-for-me-please.json'
        image-ref: "${{ inputs.image_ref }}"
    - name: 'Sign and attest image'
      shell: 'bash'
      run: |
        cosign sign --yes "${{ inputs.image_ref }}"
        cosign attest --yes --predicate "${{ inputs.sbom }}" --type cyclonedx "${{ inputs.image_ref }}"
    - name: Set outputs
      shell: bash
      id: set-outputs
      run: |
        echo "SBOM=${{ inputs.sbom }}" >> $GITHUB_OUTPUT